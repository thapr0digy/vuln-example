diff --git a/.github/workflows/semgrep-test.yml b/.github/workflows/semgrep-test.yml
index 8aa5898..5ef774f 100644
--- a/.github/workflows/semgrep-test.yml
+++ b/.github/workflows/semgrep-test.yml
@@ -46,7 +46,7 @@ jobs:
         id: diff-action
         run: |
           cd pr_code
-          git diff origin/${{ github.base_ref }} > ../pr.diff
+          git diff origin/${{ github.base_ref }} origin/${{ github.head_ref }} > ../pr.diff
           echo "DIFF_PR_FILENAME=pr.diff" >> "$GITHUB_OUTPUT"
 
       - name: Upload files as artifacts
diff --git a/.python-version b/.python-version
new file mode 100644
index 0000000..24ee5b1
--- /dev/null
+++ b/.python-version
@@ -0,0 +1 @@
+3.13
diff --git a/pr_parse.py b/pr_parse.py
index e33af2e..78c95c8 100644
--- a/pr_parse.py
+++ b/pr_parse.py
@@ -1,8 +1,8 @@
 import json
 import sys
 import re
-from git import Repo, Diff
-from typing import Dict, List, Set, Tuple
+from unidiff import PatchSet
+from typing import Dict, List, Set
 
 
 def parse_git_diff_lines(diff_output: str) -> Dict[str, Set[int]]:
@@ -18,6 +18,7 @@ def parse_git_diff_lines(diff_output: str) -> Dict[str, Set[int]]:
     # Regex to capture hunk header @@ -old_start,old_count +new_start,new_count @@
     hunk_header_re = re.compile(r"^@@ -\d+(?:,\d+)? \+(\d+),(\d+)? @@")
 
+    current_line_in_hunk = None
     for line in diff_output.splitlines():
         file_match = file_header_re.match(line)
         if file_match:
@@ -50,6 +51,18 @@ def parse_git_diff_lines(diff_output: str) -> Dict[str, Set[int]]:
     return changed_lines_per_file
 
 
+def parse_git_diff(filename: str) -> Dict[str, Set[int]]:
+    changed_lines_per_file = {}
+
+    # Load file
+    patches = PatchSet.from_filename(filename)
+    for patch in patches:
+        changed_lines_per_file[patch.path] = set()
+        for hunk in patch:
+            line_count = hunk.added
+            # changed_lines_per_file[patch.path].add()
+
+
 def load_sarif(file_path: str) -> Dict:
     """Loads a SARIF file from the given path."""
     try:
@@ -86,12 +99,10 @@ def filter_findings_by_diff(
             if not artifact_location or not region:
                 continue
 
-            file_path = artifact_location.get(
-                "uri"
-            )  # SARIF uses URI, often looks like 'file:///path/to/repo/src/file.py'
+            file_path = artifact_location.get("uri")
             # Convert URI to a relative path that matches git diff output (e.g., 'src/file.py')
             # This is crucial for matching.
-            if file_path and file_path.startswith("file://"):
+            if file_path:
                 # Heuristic: Find the first occurrence of the actual file name
                 # This might need refinement based on your repo structure.
                 # A more robust way might involve knowing the repo root.
@@ -145,6 +156,7 @@ def main():
 
     head_sarif = load_sarif(head_sarif_path)
 
+    # Perform diff logic
     try:
         with open(git_diff_path, "r", encoding="utf-8") as f:
             git_diff_output = f.read()
@@ -154,14 +166,13 @@ def main():
 
     changed_lines = parse_git_diff_lines(git_diff_output)
 
+    # changed_lines = parse_git_diff(git_diff_path)
     filtered_findings = filter_findings_by_diff(head_sarif, changed_lines)
 
     if not filtered_findings:
         print("No Semgrep findings found on changed lines in this PR.")
         sys.exit(0)  # Success: No findings on changed lines
 
-    print("Semgrep findings on changed lines:")
-
     # Need to access run's rule metadata for rule names
     sarif_data_for_rules = head_sarif  # Use the head_sarif to get rule names
 
diff --git a/pyproject.toml b/pyproject.toml
index bd293d4..c4a1ac7 100644
--- a/pyproject.toml
+++ b/pyproject.toml
@@ -7,4 +7,5 @@ requires-python = ">=3.13"
 dependencies = [
     "gitpython>=3.1.44",
     "tree-sitter-language-pack>=0.8.0",
+    "unidiff>=0.7.5",
 ]
diff --git a/ssti.go b/ssti.go
index 27e8274..28b0be1 100644
--- a/ssti.go
+++ b/ssti.go
@@ -65,6 +65,19 @@ func match2(w http.ResponseWriter, req *http.Request) {
 	tmpl.Execute(w, user1)
 }
 
+func test_rce(userStr string) {
+	cmd := exec.Command(userStr)
+	var out bytes.Buffer
+	cmd.Stdout = &out
+	// Run the command
+	err := cmd.Run()
+	if err != nil {
+		log.Fatalf("Command failed with error: %v", err)
+	}
+	// Print the captured output
+	fmt.Printf("Command output:\n%s\n", out.String())
+}
+
 func no_match(w http.ResponseWriter, req *http.Request) {
 
 	var user1 = &User{1, "user@gmail.com", "Sup3rSecr3t123!"}
@@ -87,3 +100,16 @@ func no_match(w http.ResponseWriter, req *http.Request) {
 	}
 	tmpl.Execute(w, user1)
 }
+
+func test_rce2(userStr string) {
+	cmd := exec.Command(userStr)
+	var out bytes.Buffer
+	cmd.Stdout = &out
+	// Run the command
+	err := cmd.Run()
+	if err != nil {
+		log.Fatalf("Command failed with error: %v", err)
+	}
+	// Print the captured output
+	fmt.Printf("Command output:\n%s\n", out.String())
+}
diff --git a/uv.lock b/uv.lock
index 5c44c2f..f320d4c 100644
--- a/uv.lock
+++ b/uv.lock
@@ -113,6 +113,15 @@ wheels = [
     { url = "https://files.pythonhosted.org/packages/62/fa/b25e688df5b4e024bc3627bc3f951524ef9c8b0756f0646411efa5063a10/tree_sitter_yaml-0.7.1-cp310-abi3-win_arm64.whl", hash = "sha256:298ade69ad61f76bb3e50ced809650ec30521a51aa2708166b176419ccb0a6ba", size = 43801, upload-time = "2025-05-22T13:34:55.471Z" },
 ]
 
+[[package]]
+name = "unidiff"
+version = "0.7.5"
+source = { registry = "https://pypi.org/simple" }
+sdist = { url = "https://files.pythonhosted.org/packages/a3/48/81be0ac96e423a877754153699731ef439fd7b80b4c8b5425c94ed079ebd/unidiff-0.7.5.tar.gz", hash = "sha256:2e5f0162052248946b9f0970a40e9e124236bf86c82b70821143a6fc1dea2574", size = 20931, upload-time = "2023-03-10T01:05:39.185Z" }
+wheels = [
+    { url = "https://files.pythonhosted.org/packages/8a/54/57c411a6e8f7bd7848c8b66e4dcaffa586bf4c02e63f2280db0327a4e6eb/unidiff-0.7.5-py2.py3-none-any.whl", hash = "sha256:c93bf2265cc1ba2a520e415ab05da587370bc2a3ae9e0414329f54f0c2fc09e8", size = 14386, upload-time = "2023-03-10T01:05:36.594Z" },
+]
+
 [[package]]
 name = "vuln-example"
 version = "0.1.0"
@@ -120,10 +129,12 @@ source = { virtual = "." }
 dependencies = [
     { name = "gitpython" },
     { name = "tree-sitter-language-pack" },
+    { name = "unidiff" },
 ]
 
 [package.metadata]
 requires-dist = [
     { name = "gitpython", specifier = ">=3.1.44" },
     { name = "tree-sitter-language-pack", specifier = ">=0.8.0" },
+    { name = "unidiff", specifier = ">=0.7.5" },
 ]

# .github/workflows/semgrep-sast-scan.yml
name: Semgrep SAST Scan and PR Commenter

# This workflow is triggered on pull requests to the main branch.
on:
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read # to check out private repos
  pull-requests: write # to comment on pull requests

jobs:
  opengrep:
    name: Opengrep SAST Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout base branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.base_ref }} # The branch the PR is targeting
          path: baseline_code

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13' 

      - name: Install Opengrep
        run: |
          curl -fsSL https://raw.githubusercontent.com/opengrep/opengrep/main/install.sh | bash
          export PATH=$HOME/.local/bin:$PATH

      - name: Run Opengrep Base Scan
        id: opengrep-base
        run: |
          echo $PWD
          /home/runner/.opengrep/cli/v1.4.2/opengrep scan --config "p/default" --sarif-output=opengrep-base.sarif baseline_code
          echo "SARIF_BASE_FILENAME=opengrep-base.sarif" >> "$GITHUB_OUTPUT"

      - name: Checkout PR head
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }} # The PR's branch
          path: pr_code

      - name: Run Opengrep PR Scan
        id: opengrep-pr
        run: |
          echo $PWD
          /home/runner/.opengrep/cli/v1.4.2/opengrep scan --config "p/default" --sarif-output=opengrep-pr.sarif pr_code
          echo "SARIF_PR_FILENAME=opengrep-pr.sarif" >> "$GITHUB_OUTPUT"

      - name: Upload sarif files as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: opengrep-sarifs
          path: |
            ./opengrep-base.sarif
            ./opengrep-pr.sarif

      # This step reads the SARIF file, filters for high and critical vulnerabilities,
      # and then formats and posts a comment to the pull request.
      - name: Parse Semgrep SARIF and Comment on PR
        # This step will only run if the Semgrep scan produced a SARIF file.
        if: always() && steps.opengrep-base.outputs.SARIF_BASE_FILENAME && steps.opengrep-pr.outputs.SARIF_PR_FILENAME
        run: |
          RESULTS=$(python3 baseline_code/opengrep_parse.py opengrep-base.sarif opengrep-pr.sarif)
          high_severity_findings="VULNS!!"
          comment_body="### Opengrep SAST Scan Results

          Found the following high or critical severity vulnerabilities:

          ${high_severity_findings}
          ${RESULTS}"

          # Use the GitHub CLI to post the comment.
          gh pr comment "${{ github.event.pull_request.number }}" --body "${comment_body}"
        env:
          # The GITHUB_TOKEN is required to use the GitHub CLI.
          GITHUB_TOKEN: ${{ secrets.VULN_TOKEN }}
          GH_REPO: ${{ github.repository }}


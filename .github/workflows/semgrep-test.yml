# .github/workflows/semgrep-sast-scan.yml
name: Semgrep SAST Scan and PR Commenter

# This workflow is triggered on pull requests to the main branch.
on:
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read # to check out private repos
  pull-requests: write # to comment on pull requests

jobs:
  opengrep:
    name: Opengrep SAST Scan
    runs-on: ubuntu-latest

    steps:
      - name: Install uv and enable caching
        uses: astral-sh/setup-uv@v5

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install Opengrep
        run: |
          curl -fsSL https://raw.githubusercontent.com/opengrep/opengrep/main/install.sh | bash
          export PATH=$HOME/.local/bin:$PATH

      - name: Checkout PR head
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }} # The PR's branch
          path: pr_code
          fetch-depth: 0

      - name: Run Opengrep PR Scan
        id: opengrep-pr
        run: |
          /home/runner/.opengrep/cli/latest/opengrep scan --config "p/default" --sarif-output=pr.sarif pr_code
          echo "SARIF_PR_FILENAME=pr.sarif" >> "$GITHUB_OUTPUT"

      - name: Get diff for passing to parser
        id: diff-action
        run: |
          git diff origin/${{ github.base_ref }} > pr.diff
          echo "DIFF_PR_FILENAME=pr.diff" >> "$GITHUB_OUTPUT"

      - name: Upload files as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: opengrep-sarifs
          path: |
            pr.sarif
            pr.diff

      - name: Parse Semgrep SARIF and Comment on PR
        if: always() && steps.opengrep-pr.outputs.SARIF_PR_FILENAME && steps.diff-action.outputs.DIFF_PR_FILENAME
        run: |
          cd pr_code
          uv sync 
          RESULTS=$(uv run pr_parse.py ../pr.sarif ../pr.diff)
          comment_body="### Opengrep SAST Scan Results

          ${RESULTS}"

          # Use the GitHub CLI to post the comment.
          gh pr comment "${{ github.event.pull_request.number }}" --body "${comment_body}"
        env:
          # The GITHUB_TOKEN is required to use the GitHub CLI.
          GITHUB_TOKEN: ${{ secrets.VULN_TOKEN }}
          GH_REPO: ${{ github.repository }}

